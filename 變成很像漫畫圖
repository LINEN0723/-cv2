import cv2
import numpy as np
def detectFace(img):
    ggg = img.split(".")[0] # 取得檔案名稱(不添加副檔名)
    img = cv2.imread(img) # 讀取圖檔
    img_hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    h, s, v = cv2.split(img_hsv)
    # 直方圖均衡化
    v = cv2.equalizeHist(v)
    img_hsv = cv2.merge((h, s, v))
    # 中值濾波
    img_hsv = cv2.medianBlur(img_hsv, 7)
    # 形態學變換-開/閉運算
    #kernel = np.ones((5, 5), np.uint8)
    kernel = np.ones((3, 3), np.uint8)
    # img_hsv = cv2.morphologyEx(img_hsv, cv2.MORPH_OPEN, kernel, iterations=3)
    img_hsv = cv2.morphologyEx(img_hsv, cv2.MORPH_CLOSE, kernel, iterations=3)
    # 中值濾波
    #img_hsv = cv2.medianBlur(img_hsv, 7)
    img_hsv = cv2.medianBlur(img_hsv,7)
    img_mask = cv2.cvtColor(img_hsv, cv2.COLOR_HSV2BGR)
    img_mask = cv2.cvtColor(img_mask, cv2.COLOR_RGB2GRAY)
    img_mask = cv2.medianBlur(img_mask, 7)
    img_mask = cv2.medianBlur(img_mask, 7)
    img_edge = cv2.adaptiveThreshold(img_mask, 
                                     255,
                                     cv2.ADAPTIVE_THRESH_MEAN_C,
                                     cv2.THRESH_BINARY,
                                     blockSize=9,
                                     C=2)
    img_edge = cv2.cvtColor(img_edge, cv2.COLOR_GRAY2RGB)
    img_cartoon = cv2.bitwise_and(img, img_edge)
    #cv2.imwrite(ggg+ "_ggce.jpg", img_cartoon)
    cv2.imshow("im]gggg", img_cartoon)  # 顯示圖像
    cv2.waitKey(0)
    cv2.destroyAllWindows()
detectFace('img69.jpg')
